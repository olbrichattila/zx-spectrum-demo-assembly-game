romOpenChannel equ #1601
romUpperScreanId equ 2

; param hl = null terminated string
showMessage:
        push hl
        ld a,romUpperScreanId
        call romOpenChannel
        pop hl
nextCharacter:
        ld a,(hl)
        or a
        ret z
        rst #10
        inc hl
        jr nextCharacter

showScoreBar:
        ld a,romUpperScreanId
        call romOpenChannel
        ld hl,scoreMessage
        jp nextCharacter

showTimerBar:
        ld a,romUpperScreanId
        call romOpenChannel
        ld hl,timerMessage
        jp nextCharacter


;  number in HL
displayNum:
        call num2Dec
        ld a,romUpperScreanId
        call romOpenChannel
        ld hl,numAsString
        jp nextCharacter


; de should contain the addres convert to 
; hl is the number to display
num2Dec:
	ld de, numAsString
        ld bc,-10000
        call num1
        ld bc,-1000
        call num1
        ld bc,-100
        call num1
        ld c,-10
        call num1
        ld c,b

num1:
        ld a,'0'-1
num2:   inc a
        add hl,bc
        jr c,num2 
        sbc hl,bc
        ld (de),a
        inc de
        ret

getRandomNumber:
        push    hl
        push    de
        ld      hl,(randData)
        ld      a,r
        ld      d,a
        ld      e,(hl)
        add     hl,de
        add     a,l
        xor     h
        ld      (randData),hl
        pop     de
        pop     hl
        ret

randData	dw 0
numAsString db	32,32,32,32,32,0
scoreMessage:
  .dm "\a\x01\x01" ; AT 10, 5
  .dm "\b\x01"     ; BRIGHT 1
  .dm "\i\x07"     ; INK 0
  .dm "Score: "
  .db 0x00  

timerMessage:
  .dm "\a\x01\x10" ; AT 10, 10
  .dm "\b\x01"     ; BRIGHT 1
  .dm "\i\x07"     ; INK 0
  .dm "Time: "
  .db 0x00  

